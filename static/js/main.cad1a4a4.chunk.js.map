{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","completed","title","classNames","TodoList","todos","map","getUserById","userId","usersFromServer","find","initialTodos","App","useState","setTodos","selectedUserId","setSelectedUserId","todoTitle","setTodoTitle","shouldShowError","setShouldShowError","action","method","onSubmit","event","preventDefault","newTodo","Math","max","newTodos","type","placeholder","value","onChange","ch","target","length","some","charSet","includes","toLowerCase","Number","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cad1a4a4.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\nimport './UserInfo.scss';\n\ntype Props = {\n  user: User,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\nimport './TodoInfo.scss';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    completed,\n    title,\n    user,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        { 'TodoInfo--completed': completed },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\n\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo key={todo.id} todo={todo} />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\nimport { Todo } from './types/Todo';\n\nimport './App.scss';\n\nconst getUserById = (userId: number) => {\n  return usersFromServer.find(({ id }) => id === userId) || null;\n};\n\nconst initialTodos = todosFromServer.map(todo => (\n  {\n    ...todo,\n    user: getUserById(todo.userId),\n  }\n));\n\nconst isAppropriateChar = (ch: string) => {\n  const correctCharSet = [\n    'abcdefghijklmnopqrstuvwxyz',\n    'абвгдеёжзийклмнопрстуфхцчшщъыьэюя',\n    '0123456789',\n    ' ',\n  ];\n\n  return correctCharSet.some(charSet => charSet.includes(ch.toLowerCase()));\n};\n\nexport const App = () => {\n  const [todos, setTodos] = useState(initialTodos);\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [shouldShowError, setShouldShowError] = useState(false);\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (todoTitle && selectedUserId) {\n      const currentMaxId = Math.max(...todos.map(todo => todo.id));\n\n      const newTodo: Todo = {\n        id: currentMaxId + 1,\n        title: todoTitle,\n        completed: false,\n        userId: selectedUserId,\n        user: getUserById(selectedUserId),\n      };\n\n      const newTodos = [...todos, newTodo];\n\n      setTodos(newTodos);\n      setSelectedUserId(0);\n      setTodoTitle('');\n      setShouldShowError(false);\n    } else {\n      setShouldShowError(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label>\n            {'Title: '}\n\n            <input\n              type=\"text\"\n              data-cy=\"titleInput\"\n              placeholder=\"Enter a title\"\n              value={todoTitle}\n              onChange={(event) => {\n                const { value } = event.target;\n                const { length } = value;\n\n                if (length === 0 || isAppropriateChar(value[length - 1])) {\n                  setTodoTitle(value);\n                }\n              }}\n            />\n          </label>\n\n          {\n            shouldShowError\n            && !todoTitle\n            && (\n              <span className=\"error\">\n                Please enter a title\n              </span>\n            )\n          }\n        </div>\n\n        <div className=\"field\">\n          <label>\n            {'User: '}\n\n            <select\n              data-cy=\"userSelect\"\n              value={selectedUserId}\n              onChange={(event) => {\n                setSelectedUserId(Number(event.target.value));\n              }}\n            >\n              <option\n                value=\"0\"\n                disabled\n              >\n                Choose a user\n              </option>\n\n              {usersFromServer.map(user => {\n                const { id, name } = user;\n\n                return (\n                  <option key={id} value={id}>\n                    {name}\n                  </option>\n                );\n              })}\n            </select>\n          </label>\n\n          {\n            shouldShowError\n            && !selectedUserId\n            && (\n              <span className=\"error\">\n                Please choose a user\n              </span>\n            )\n          }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}